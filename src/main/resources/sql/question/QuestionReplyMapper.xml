<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.tCourse.dao.QuestionReplyDao"> 


<!-- qna 답변부분 리스트로 조회 -->
	<select id="listquestionreply" resultType="kr.happyjob.study.tCourse.model.QuestionReplyVO">
		/*kr.happyjob.study.tCourse.dao.questionDao.listquestionreply*/
		SELECt 
		   r.loginID,
           r.course_no,
           r.name,
           r.reply_no,
           r.reply_content,
           DATE_FORMAT(r.reply_created_at, '%Y-%m-%d') as reply_created_at,
		   ui.loginID
		   
			from tb_question_reply r left join tb_userinfo ui on r.loginId = ui.loginID
			where r.question_no = #{question_no}
       <!-- select 
       
           c.course_no,
           q.question_no,
           r.loginID,
           r.course_no,
           r.name,
           r.reply_no,
           r.reply_content,
           DATE_FORMAT(r.reply_created_at, '%Y-%m-%d') as reply_created_at
             , ui.name as writer
     
       from tb_question q
       
              inner join tb_userinfo ui on ui.loginID = r.loginID
              left outer join tb_question_reply r on q.question_no = r.question_no
              inner join tb_course c ON c.course_no = r.course_no
      where q.question_no = #{question_no} -->
		</select>

<!-- qna 모달 질문 내용 조회 -->
	<select id="selectquestionreply" resultType="kr.happyjob.study.tCourse.model.QuestionReplyVO">
		/*kr.happyjob.study.tCourse.dao.questionReplyDao.listquestion*/
		
        select 
       		   c.course_no
        	 , q.question_no
             , q.course_no
             , q.loginID
             , q.file_no
             , q.question_title
             , q.question_content
             , q.name
             , r.name
             , r.reply_no
  			 , r.reply_content
             , DATE_FORMAT(q.question_created_at, '%Y-%m-%d') as question_created_at
             , DATE_FORMAT(r.reply_created_at, '%Y-%m-%d') as reply_created_at      
     
       from  tb_question q<!-- tb_question_reply r -->
       
              inner join tb_userinfo ui on ui.loginID = r.loginID
              inner join tb_question_reply r on q.question_no = r.question_no
              inner join tb_course c ON c.course_no = q.course_no
              
              <!--
              <where>
                <if test="(stitle != null) and (!stitle.equals(''))">
                     and q.question_title like concat('%',#{stitle},'%')
                </if>
         
              </where>
				ORDER BY q.question_created_at DESC
    			LIMIT #{startpoint}, #{pageSize}  -->
    			
	
	</select>
	
	   <insert id="insertquestionreply">
	    <selectKey keyProperty="selreply" resultType="int" order="BEFORE"> 
	   	     SELECT IFNULL(MAX(reply_no),0) +1 
	   	     FROM tb_question_reply
             WHERE question_no = #{question_no}
	    </selectKey>
	       
	       
	       <!-- name어떻게 할지 고민해봐야할듯? -->
	    insert into tb_question_reply
	                 (  
	                    reply_no
	                  , question_no 
                      , loginID                       
                      , name                   
                      , reply_content                    
                      , reply_created_at
                      , course_no
                    ) 
                    values (
                       #{selreply}
                     , #{question_no}
                     , #{loginID}
                     , #{name}
                     , #{reply_content}
                     , now()
                     , (SELECT course_no FROM tb_question WHERE question_no = #{question_no})
                    )
	   </insert>  
	
	<update id="updatequestionreply" >
	     update tb_question_reply
	          set loginID = #{loginID}
                 , question_reply_content = #{replyContent}
                 , question_reply_regdate = now()
	     where question_no = #{question_no}
	</update>
	
	<delete id="deletequestionreply">
	    delete from tb_question_reply
	    where reply_no = #{reply_no}
	</delete>
	
	
	
	
	</mapper>