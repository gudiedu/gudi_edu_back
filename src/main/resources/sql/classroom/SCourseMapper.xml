<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.classroom.dao.SCourseDao">

<!-- 강의관리 : 학생이 수강하는 강의 목록 조회 -->
<select id="sStudentCourseInfo" resultType="kr.happyjob.study.classroom.dto.SCourseDto">
	SELECT ui.name AS student_name,
	       c.loginID,
	       ui2.name AS teacher_name,
	       c.course_no,
	       c.survey_no,
	       c.course_subject,
	       c.course_name,
	       c.course_start_date,
	       c.course_end_date,
	       e.enrollment_confirmed
	FROM tb_enrollment e
	LEFT OUTER JOIN tb_userinfo ui ON ui.loginID = e.loginID
	LEFT OUTER JOIN tb_course c ON c.course_no = e.course_no
	LEFT OUTER JOIN tb_userinfo ui2 ON ui2.loginID = c.loginID
	WHERE e.loginID = #{loginID}
	AND e.enrollment_confirmed = "Y"
	limit #{startPoint}, #{pageSize}
</select>

<!-- 강의관리 : 학생이 수강하는 강의 목록 갯수 조회 -->
<select id="totalCntCourse" resultType="int">
	SELECT count(*)
	FROM tb_enrollment e
	INNER JOIN 
	    tb_userinfo ui ON ui.loginID = e.loginID
	WHERE e.loginID = #{loginID}
	AND e.enrollment_confirmed = "Y"
</select>

<!-- 강의관리 출결 : 학생이 수강하는 특정 강의 내용 조회 -->
<select id="sStudentSelectedCourseInfo" resultType="kr.happyjob.study.classroom.dto.SCourseDto">
	SELECT c.loginID,
		   ui.name,
	       c.course_no,
	       c.course_subject,
	       c.course_name,
	       DATE_FORMAT(c.course_start_date , '%Y-%m-%d') as course_start_date,
	       DATE_FORMAT(c.course_end_date , '%Y-%m-%d') as course_end_date
	FROM tb_course c
	LEFT OUTER JOIN 
    	   tb_userinfo ui ON ui.loginID = c.loginID
	LEFT OUTER JOIN
	       tb_attendance a ON a.course_no = c.course_no
	WHERE a.loginID = #{loginID}
	AND a.course_no = #{pCourseNo}
	GROUP BY a.loginID, c.course_no
</select>

<!-- 강의관리 출결 : 학생 출결(출석한 횟수) -->
<select id="sAttendanceDays" resultType="int">
	SELECT count(*)
	FROM tb_attendance a
	LEFT OUTER JOIN
	     tb_userinfo ui ON ui.loginID = a.loginID
	LEFT OUTER JOIN
	     tb_course c ON c.course_no = a.course_no
	WHERE a.loginID = #{loginID}
	AND a.course_no = #{pCourseNo}
	AND a.attendance_status = "출석"
</select>

<!-- 강의관리 출결 : 학생 출결(결석한 횟수) -->
<select id="sAbsenceDays" resultType="int">
	SELECT count(*)
	FROM tb_attendance a
	LEFT OUTER JOIN
	     tb_userinfo ui ON ui.loginID = a.loginID
	LEFT OUTER JOIN
	     tb_course c ON c.course_no = a.course_no
	WHERE a.loginID = #{loginID}
	AND a.course_no = #{pCourseNo}
	AND a.attendance_status = "결석"
</select>

<!-- 강의관리 출결 : 학생 출결(지각, 결석한 것만) -->
<select id="sAttendanceNotes" resultType="kr.happyjob.study.classroom.dto.SCourseDto">
	SELECT ui.loginID,
	       a.attendance_no,
	       a.course_no,
	       DATE_FORMAT(a.attendance_date , '%Y-%m-%d') as attendance_date,
	       a.attendance_status,
	       c.course_subject,
	       c.course_name,
	       c.course_start_date,
	       c.course_end_date
	FROM tb_attendance a
	LEFT OUTER JOIN
	     tb_userinfo ui ON ui.loginID = a.loginID
	LEFT OUTER JOIN
	     tb_course c ON c.course_no = a.course_no
	WHERE a.loginID = #{loginID}
	AND a.course_no = #{pCourseNo}
	AND (a.attendance_status = "지각" OR a.attendance_status = "결석")
	ORDER BY attendance_date ASC
</select>

<!-- 강의관리 출결 : 공휴일 및 휴강일 -->
<select id="sDayoffInfo" resultType="kr.happyjob.study.classroom.model.SDayoffModel">
	SELECT DATE_FORMAT(d.dayoff_date , '%Y-%m-%d') as dayoff_date
	FROM tb_dayoff d
</select>

<!-- 강의관리 수업만족도 : 수업만족도 질문 조회 -->
<select id="sSatisfactionQuestion" resultType="kr.happyjob.study.classroom.dto.SCourseDto">
	SELECT c.course_no,
		   c.course_name,
	       s.survey_no,
	       s.survey_name,
	       sq.survey_question_no,
	       sq.survey_question_text,
	       sq.question_choiced,
	       sq.survey_question_type
	FROM tb_course c
	LEFT OUTER JOIN 
	     tb_survey s ON s.survey_no = c.survey_no
	LEFT OUTER JOIN 
	     tb_survey_question sq ON sq.survey_no = c.survey_no
	WHERE c.course_no = #{courseNo}
</select>

<!-- 강의관리 수업만족도 : 수업만족도 보기 조회 -->
<select id="sSatisfactionAnswer" resultType="kr.happyjob.study.classroom.dto.SCourseDto">
	SELECT c.course_no,
	       s.survey_no,
	       s.survey_name,
	       sq.survey_question_no,
	       sq.survey_question_text,
	       sq.question_choiced,
	       sq.survey_question_type,
	       scc.question_choiced,
	       scc.choice_no,
	       scc.choice_result
	FROM tb_course c
	LEFT OUTER JOIN 
	     tb_survey s ON s.survey_no = c.survey_no
	LEFT OUTER JOIN 
	     tb_survey_question sq ON sq.survey_no = c.survey_no
	LEFT OUTER JOIN 
	     tb_survey_choice_content scc ON scc.question_choiced = sq.question_choiced
	WHERE c.course_no = #{courseNo}
</select>

<!-- 강의관리 수업만족도 : 수업만족도 응답 -->
<insert id="sInsertSurvey">
	INSERT INTO tb_survey_answer
			(
			course_no, 
			loginID, 
			survey_no, 
			survey_question_no, 
			question_choiced, 
			choice_no, 
			written_answer
			)
			VALUES
			(
			#{courseNo}
			, #{loginID}
			, #{surveyNo}
			, #{surveyQuestionNo}
			, #{questionChoiced}
			, #{choiceNo}
			, #{writtenAnswer}
			)
</insert>

<!-- 강의관리 수업만족도 : 수업만족도 응답 유무 -->
<select id="sSurveyComplete" resultType="int">
	SELECT count(*)
	FROM tb_survey_answer sa
	WHERE sa.course_no = #{pCourseNo}
	AND sa.loginID = #{loginID}
</select>
</mapper>